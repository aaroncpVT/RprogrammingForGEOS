install.packages('GISTools')
library('raster')
library('rgdal')
library('rgeos')
#library("maptools")
library("GISTools")
a=matrix(c(1,2,3,4,5,6),nrow=2)
a
a=matrix(c(1,2,3,4,5,6),nrow=3)
a
a=matrix(c(1,2,3,4,5,6),2)
a
a=matrix(c(1,2,3,4,5,6),3)
a
a=matrix(c(1,2,3,4,5,6),3,byrow=T)
a
rnorm(3)
rnorm(3,3)
rnorm(100)
a=rnorm(100)
a
max(a)
min(a)
hist(a)
a=rnorm(1000)
hist(a)
set.seed(1302)
a=rnorm(1000)
a
set.seed(1302)
b=rnorm(1000)
plot(a,b)
set.seed(1303)
b=rnorm(1000)
plot(a,b)
a=seq(1,10)
a
library(rgdal)
library(raster)
library(party)
library(randomForest)
t1<-proc.time()
#B2<-raster('/home/yshao/shanghai/tree30m.tif')
fgdb <- "C:/research/china/New.gdb"
subset(ogrDrivers(), grepl("GDB", name))
fc_list <- ogrListLayers(fgdb)
print(fc_list)
library(SWATmodel)
install.packages('SWATmodel')
library(SWATmodel)
source('C:/research/cb/test_fuka.R')
source('C:/research/cb/test_fuka.R')
source('C:/research/cb/test_fuka.R')
library(RCurl)
install.packages('RCurl')
library(RCurl)
getCurlOptionsConstants()[["connecttimeout"]]
myOpts <- curlOptions(connecttimeout = 200)
getCurlOptionsConstants()[["connecttimeout"]]
myOpts <- curlOptions(connecttimeout = 200)
source('C:/research/cb/test_fuka.R')
library(SWATmodel)
library(SWATmodel)
flowgage_id='01660400'
flowgage=get_usgs_gage(flowgage_id)
hist_wx=get_cfsr_latlon(flowgage$declat,flowgage $declon)
install.packages('dynatopmodel')
source('C:/research/rice/topmodel.R')
summary(bromton)
summary(brompton)
brompton
obs <- aggregate_obs(list("rain"=brompton$rain, "pe"=brompton$pe), dt=15/60)
obs
length(obs)
dim(obs)
obs$rain
obs$pe
pe.60 <- approx.pe.ts("2012-01-01", "2012-12-31", dt=1)
pe.15 <- approx.pe.ts("2012-01-01", "2012-12-31", dt=0.25)
length(pe.60)
length(pe.15)
require(raster)
build_chans(dem, drn, chan.width = 1, atb = NULL, buffer = 10,
atb.thresh = 0.8, single.chan = TRUE)
build_chans(dem, drn, chan.width = 1, atb = NULL, buffer = 10,atb.thresh = 0.8, single.chan = TRUE)
chan.rast <- build_chans(dem=brompton$dem, drn=brompton$drn, buff=5, chan.width=2)
require(dynatopmodel)
sp::plot(chan.rast[[1]], col="green", legend=FALSE)
build_layers(dem, fill.sinks = TRUE, deg = 0.1)
layers <- build_layers(brompton$dem)
sp::plot(layers, main=c("Elevation AMSL (m)", "Upslope area (log(m^2/m))", "TWI ((log(m^2/m))"))
tab <- build_routing_table(brompton$dem,chans=brompton$reaches,breaks=5)
chans <- build_chans(brompton$dem, drn=brompton$drn, chan.width=2)
chans <- build_chans(brompton$dem, drn=brompton$drn, chan.width=2)
layers <- addLayer(brompton$dem, 2000-brompton$flowdists)
disc <- discretise(layers, cuts=c(flowdists=10), chans=chans, area.thresh=0.5/100)
rm(chans)
rm(layers)
write.table(disc$groups, sep="\t", row.names=FALSE)
with(brompton$storm.run, disp_output(evap=ae*1000,qobs=qobs*1000,
qsim=qsim*1000, rain=rain*1000,
max.q=2, cex.main=1, col.axis="slategrey", las.time=1))
a.atb <- upslope.area(brompton$dem, atb=TRUE)
a.atb
plot(a.atb$a)
plot(a.atb$atb)
plot(a.atb)
plot(a.atb)
discc
disc
disc$layers
plot(disc$layers)
brompton$drn
plot(brompton$drn)
brompton$chans
plot(brompton$chans)
brompton$weights
disc$groups
disc$layers
disc$hru
plot(disc$hru)
chan.rast <- build_chans(dem=brompton$dem, buff=5, chan.width=2)
chan.rast <- build_chans(dem=brompton$dem, atb=TRUE,buff=5, chan.width=2)
chan.rast <- build_chans(dem=brompton$dem, atb=a.atb,buff=5, chan.width=2)
atb
a.atb
a.atb$atb
chan.rast <- build_chans(dem=brompton$dem, atb=a.atb$atb,buff=5, chan.width=2)
chan.rast <- build_chans(atb=a.atb$atb,buff=5, chan.width=2)
chan.rast <- build_chans(dem=brompton$dem, atb=TRUE,buff=5, chan.width=2)
install.packages('dataRetrieval')
library(dataRetrieval)
flowgage_id='01660400'
monthlyStat <- readNWISdata(site=flowgage_id,
service="stat",
statReportType="monthly")
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m
length(m)
m$month_nu
m$mean_va
m$year_nu
m
library(SWATmodel)
flowgage_id='01660400'
flowgage=get_usgs_gage(flowgage_id)
flowgage$flowdata
m
d2 <- as.yearmon(dat, "%Y-%b")
m_month<-m$month_nu
m_month
m_year<-m$year_nu
m_year_month<-paste(m_year,m_month)
m_year_month
m_year_month<-paste(m_year,m_month,sep='-')
m_year_month
sort(m_year_month)
order(m_year_month)
m_year_month
u<-sort(m_year_month, index.return=TRUE)
u
m$mean_va
mvalue<-m$mean_va
mvalue_s<-mvalue(u$ix)
mvalue[order(u$ix]
mvalue[order(u$ix)]
k<-c(m_year_month,mvalue[order(u$ix)])
k
k<-cbind(m_year_month,mvalue[order(u$ix)])
k
k<-cbind(sort(m_year_month),mvalue[order(u$ix)])
k
#getting monthly data
library(dataRetrieval)
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m_year_month<-paste(m_year,m_month,sep='-')
m_year_month
u<-sort(m_year_month, index.return=TRUE)
u$x
u$ix
#getting monthly data
library(dataRetrieval)
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m_year_month<-paste(m_year,m_month,sep='-')
u<-sort(m_year_month, index.return=TRUE)
mvalue<-m$mean_va
k<-cbind(u$x,mvalue[order(u$ix)])
k
library(dataRetrieval)
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m_year_month<-paste(m_year,m_month,sep='-')
mvalue<-m$mean_va
k<-cbind(m_year_month,mvalue)
k
require(data.table)
install.packages('data.table')
library(SWATmodel)
library(dataRetrieval)
require(data.table)
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m_year_month<-paste(m_year,m_month,sep='-')
mvalue<-m$mean_va
k<-cbind(m_year_month,mvalue)
ks <- data.table(k, key="V1")
k
ks <- k[order(k[,1], decreasing = TRUE),]
ks
ks <- k[order(k[,1], decreasing = F),]
ks
sprintf("%03d", 1)
sprintf("%02d", 1)
length(m)
length(m$month_nu)
library(dataRetrieval)
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m_month=m$month_nu
m_monthn=m_month
for (i in 1:length(m$month_nu))
{
m_monthn[i]=sprintf("%02d", m_month[i])
}
m_monthn
library(dataRetrieval)
m <- readNWISdata(site=flowgage_id,service="stat",statReportType="monthly")
m_month=m$month_nu
m_monthn=m_month
for (i in 1:length(m$month_nu))
{
m_monthn[i]=sprintf("%02d", m_month[i])
}
m_year_month<-paste(m_year,m_monthn,sep='-')
mvalue<-m$mean_va
k<-cbind(m_year_month,mvalue)
ks <- k[order(k[,1], decreasing = F),]
ks
dim(ks)
ks[563,]
plot(ks[,2])
ks
2017-1981+1
2016-1981+1
36*12
list.files()
format(d,"%m")
library(SWATmodel)
flowgage_id='01660400'
flowgage=get_usgs_gage(flowgage_id)
hist_wx=get_cfsr_latlon(flowgage$declat,flowgage $declon)
require(dynatopmodel)
require(raster)
data("brompton")
obs <- aggregate_obs(list("rain"=brompton$rain, "pe"=brompton$pe), dt=15/60)
pe.60 <- approx.pe.ts("2012-01-01", "2012-12-31", dt=1)
pe.15 <- approx.pe.ts("2012-01-01", "2012-12-31", dt=0.25)
library(topmodel)
library(Hmisc)
install.packages("Hmisc")
library(topmodel)
library(Hmisc)
data(huagrahuma)
attach(huagrahuma)
rm(list=ls())
data(huagrahuma)
attach(huagrahuma)
str(huagrahuma)
topidx
parameters
Qsim <- topmodel(parameters, topidx, delay, rain, ET0)
library(SWATmodel)
flowgage_id='01668000'
#flowgage=get_usgs_gage(flowgage_id)
flowgage=get_usgs_gage(flowgage_id,begin_date="2001-01-01",end_date="2015-12-31")
#hist_wx=get_cfsr_latlon(flowgage$declat,flowgage $declon)
usgs=flowgage$flowdata
usgs=usgs$flow/12/3600
swat_obs=data.frame(seq(as.Date("2001/1/1"), as.Date("2015/12/31"), "days"),usgs)
write.table(swat_obs,"SWAT_obs.txt",sep="\t",row.names=FALSE,col.names = FALSE)
library(SWATmodel)
flowgage_id='01628500'
#flowgage=get_usgs_gage(flowgage_id)
flowgage=get_usgs_gage(flowgage_id,begin_date="2001-01-01",end_date="2015-12-31")
#hist_wx=get_cfsr_latlon(flowgage$declat,flowgage $declon)
usgs=flowgage$flowdata
usgs=usgs$flow/12/3600
swat_obs=data.frame(seq(as.Date("2001/1/1"), as.Date("2015/12/31"), "days"),usgs)
write.table(swat_obs,"SWAT_obs.txt",sep="\t",row.names=FALSE,col.names = FALSE)
exp(-0.00905)
exp(-0.042868)
exp(-0.2089)
exp(-0.9675)
exp(-0.66)
source('C:/nswat/getusgs.R')
source('C:/nswat/getusgs.R')
source('C:/nswat/getusgs.R')
source('C:/nswat/getusgs.R')
a<-matrix(nrow=0, ncol=5)
a
a[1]
dim(a)
a<-matrix(nrow=1, ncol=5)
a
a[1,1]<-1
a
a[1,2]<-3
a
a[1,3]<-3
a[1,4]<-3
a[1,5]<-3
a
sum(a)
a1<-a-
1
a
a1
a1^2
a<-matrix(nrow=1,ncol=2)
a
a<-1:10
a
a[1]
a[1:5]
a[1:10:2]
a[1:2:10]
a[seq(1:10:2)]
seq(1:10)
seq(1:2:10)
seq(1,10,2)
a[seq(1,10,2)]
a
a[seq(10,1,-2)]
seq(10,1,-2)
m<-array(as.numeric(),10)
m
m<-array(10)
m
m<-array(as.numeric(),10)
length(m)
m[1]
m<-seq(1,10,2)
m
m<-seq(1,10)
m
a=seq(0,10,2)
a
a=1:10
a
a[seq(1,10,2)]
a=list(10)
a
a=list(1:10)
a
a[[1]]
a[1]
a=as.array(10)
a
a=as.array(1:10)
a
a=numeric(length=10)
a
a=a+1
a
a[2]
a=matrix(nrow=3,ncol=4)
a
a=matrix(0,nrow=3,ncol=4)
a
a=matrix(1,nrow=3,ncol=4)
a
a=data.frame(a)
a
a$X1
a[1,]
a[2,]
a[,3]
a[1,,1]
a
a[1,1]
a[2,2]
library(rgdal)
library(raster)
library(mapview)
library(tidyverse)
df <- read_csv("https://raw.githubusercontent.com/fastah/sample-data/master/FastahDatasetMapsTutorial.csv")
coordinates(df) <- ~ lon + lat
proj4string(df) <- "+init=epsg:4326"
mapview(df)
pal2 <- colorRampPalette(c("red", "yellow", "blue"))
ptm <- proc.time()
mapview(a,col.regions = pal2, na.color = "transparent",alpha = 1, legend = TRUE, maxpixels =  20936916)
proc.time() - ptm
193:16:241
seq(193,241,16)
170/7*12
170/6.8*12
170/6.75*12
(0.5)^0.2
(0.5)^0.5
(0.5)^1
(0.5)^0.5
(0.5)^0.2
(0.5)^0.1
(0.5)^1
(0.5)^0.25
(0.5)^0.25
160*0.84
devtools::install_github("chrisschuerz/SWATplusR")
install.packages('glue')
devtools::install_github("chrisschuerz/SWATplusR")
install.packages("glue")
devtools::install_github("chrisschuerz/SWATplusR")
install.packages("FedData")
library(FedData)
remotes::update_packages("rlang")
install.packages('rland')
install.packages('rlang')
install.packages("rlang")
remotes::update_packages("rlang")
library(FedData)
install.packages("FedData")
library(FedData)
install.packages("rlang", type = "source")
install.packages("rlang", type = "source")
library('FedData')
install.packages('FedData')
library('FedData')
install.packages("rlang", type = "source")
install.packages("rlang", type = "source")
install.packages("sp")
install.packages("rgdal")
library(raster)
library(rgdal)
install.packages("raster")
install.packages("rgeos")
install.packages("sf")
install.packages('remotes')
remotes::install_version("SDMTools", "1.1-221")
install.packages('devtools')
library(devtools)
Sys.setenv(PATH = paste("C:/Rtools40/bin", Sys.getenv("PATH"), sep=";"))
Sys.setenv(BINPREF = "C:/Rtools40/mingw_$(WIN)/bin/")
remotes::install_version("SDMTools", "1.1-221")
install.packages('remotes')
remotes::install_version("SDMTools", "1.1-221")
library(SDMTools)
runif(10)
a<-runif(10)
plot(a)
a<-runif(10000)
hist(a)
a
length(a[a>0.9])
a<-runif(10000)
length(a[a>0.9])
length(a[a>=0.9])
a<-runif(10000)
length(a[a>=0.9])
a<-runif(10000)
length(a[a>=0.9])
1992/4
241509/160527
50/24
0.5/24
666*10000
library(raster)
library(rgdal)
View(huagrahuma)
source('C:/ruoyu/preptrainningdata.R')
source('C:/ruoyu/preptrainningdata.R')
library(raster)
library(rgdal)
cbg<-readOGR('.',layer='cbg')
setwd("C:/Users/yang shao/Dropbox/teaching2021/Rprogramming/examples_data")
cbg<-readOGR('.',layer='cbg')
plot(cbg)
crs(cbg)
dem<-raster('dem_county.tif')
demp<-projectRaster(dem,res=30,crs=crs(cbg))
crs(dem)
plot(demp)
plot(cbg,add=T)
summary(cbg)
#rasterize cgb
cbg$newid<-1:length(cbg)
cbg$newid
cbg_raster<-rasterize(cbg,demp,field=cbg$newid)
plot(cbg_raster)
cbg_raster
length(cbg)
dem_mean <- zonal(demp, cbg_raster, fun='mean')
dem_mean
dem_max <- zonal(demp, cbg_raster, fun='max')
dem_max
dem_max <- zonal(demp, cbg_raster, fun='min')
dem_max
library(raster)
library(rgdal)
cbg<-readOGR('.',layer='cbg')
plot(cbg)
crs(cbg)
dem<-raster('dem_county.tif')
crs(dem)
demp<-projectRaster(dem,res=30,crs=crs(cbg))
plot(demp)
plot(cbg,add=T)
cbg$newid<-1:length(cbg)
cbg$newid
plot(cbg_raster)
cbg_raster
dem_mean <- zonal(demp, cbg_raster, fun='mean')
dem_mean
dem_max <- zonal(demp, cbg_raster, fun='max')
dem_min <- zonal(demp, cbg_raster, fun='min')
